services:
  sessionmvc:
    image: ${DOCKER_REGISTRY-}sessionmvc
    build:
      context: .
      dockerfile: SessionMVC/Dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ConnectionStrings__AssessmentDbConnectionString=Server=db;Database=Assessment;User=sa;Password=Your_password123;Encrypt=True;TrustServerCertificate=True
    ports:
      - "8081:5000" # Прокидаємо порт 5000 (HTTP) з контейнера на порт 8081 хост-машини
    depends_on:
      db:
        condition: service_healthy
        restart: true
      rabbitmq:
        condition: service_healthy
    networks:
      - devnetwork
    restart: unless-stopped
    
  db:
    image: mcr.microsoft.com/mssql/server:2022-latest
    container_name: mssql
    environment:
      SA_PASSWORD: "Your_password123"
      ACCEPT_EULA: "Y"
    ports:
      - "1433:1433"
    volumes:
      - sqlvolume:/var/opt/mssql
    networks:
      - devnetwork
    restart: unless-stopped
    healthcheck:
      test: [
        "CMD-SHELL",
        "/opt/mssql-tools18/bin/sqlcmd -S localhost -U sa -P Your_password123 -N -C -Q \"SELECT 1\""
      ]
      interval: 10s
      timeout: 5s
      retries: 10
   
  rabbitmq:
    image: rabbitmq:4.1-management
    container_name: rabbitmq
    tty: true
    hostname: rabbitmq
    environment:
      RABBITMQ_DEFAULT_USER: "guest"
      RABBITMQ_DEFAULT_PASS: "guest"
      RABBITMQ_SERVER_ADDITIONAL_ERL_ARGS: -rabbitmq_stream advertised_host localhost
    healthcheck:
      test: rabbitmq-diagnostics -q ping
      interval: 5s
      timeout: 15s
      retries: 3
    ports:
      - "5672:5672"
      - "15672:15672"
      - "5552:5552"

volumes:
  sqlvolume:
    
networks:
  devnetwork:
    driver: bridge